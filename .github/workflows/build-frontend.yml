name: Build a frontend application and publish it to Docker registry
on:
  workflow_call:
    inputs:
      service_name:
        description: "The service name to be published to Docker registry"
        type: string
        required: true
    outputs:
      new-version:
        description: "The new service version"
        value: ${{ jobs.generate-version.outputs.service-version }}

env:
  HOME: ${{github.workspace}}
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

jobs:
  generate-version:
    runs-on:
      group: builder
    outputs:
      service-version: ${{ steps.version.outputs.new_version }}
    steps:
      - uses: actions/checkout@v4
      - id: version
        uses: chirpwireless/reusable-github-actions/.github/actions/calendar-version@main
      - name: "Create a summary"
        run: |
          echo "Building a new revision ${{steps.version.outputs.new_version}}" > $GITHUB_STEP_SUMMARY

  build:
    runs-on:
      group: builder
    needs: [generate-version]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
      # Install yarn as we are using a self-hosted runner
      - name: Setup Yarn
        shell: bash
        run: |
          npm install -g yarn@1.22.22
      - name: Install yarn dependencies
        run: yarn install --frozen-lockfile
      - name: Run build
        run: yarn build
      - name: Install yarn production dependencies
        run: yarn install --production --frozen-lockfile
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ inputs.service_name }}:${{ needs.generate-version.outputs.service-version }}

  publish-version:
    runs-on:
      group: scw-k8s-dev
    needs: [generate-version, build]
    permissions:
      checks: write
    steps:
      - name: Publish Version
        uses: chirpwireless/reusable-github-actions/.github/actions/version-publish@main
        with:
          commit-sha: ${{ github.event.pull_request.head.sha || github.sha }}
          build-version: ${{ needs.generate-version.outputs.service-version }}

  publish-release:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on:
      group: scw-k8s-dev
    needs: [generate-version, build]
    steps:
      - uses: chirpwireless/reusable-github-actions/.github/actions/publish-release@main
        with:
          version: ${{ needs.generate-version.outputs.service-version }}
