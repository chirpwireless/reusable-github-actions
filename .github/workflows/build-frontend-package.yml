name: Build a frontend package
on:
  workflow_call:
    inputs:
      publish:
        type: boolean
        default: false
        description: "True if you want to publish the build output to Github Registry"
      release:
        type: boolean
        default: false
        description: "True if you want to create a release"
      env_local:
        type: string
        default: ""
        description: "The secret name for the contents of the .env.local file"
      package_suffix:
        type: string
        default: ""
        description: "The suffix for the package version"

env:
  HOME: ${{github.workspace}}
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

jobs:
  generate-version:
    runs-on:
      group: gke-non-prod
    outputs:
      service-version: ${{ steps.version.outputs.new_version }}
    steps:
      - uses: actions/checkout@v4
      - id: version
        uses: chirpwireless/reusable-github-actions/.github/actions/calendar-version@main
      - name: "Create a summary"
        run: |
          echo "Building a new revision ${{steps.version.outputs.new_version}}" > $GITHUB_STEP_SUMMARY

  build:
    runs-on:
      group: builder
    needs: [generate-version]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
      - name: Prepare .env.local file
        if: inputs.env_local != ''
        run: |
          echo "${{ secrets[inputs.env_local] }}" > .env.local
      # Install yarn as we are using a self-hosted runner
      - name: Install Yarn
        run: |
          npm install -g yarn@1.22.22
      - name: Install yarn dependencies
        run: yarn install --frozen-lockfile
      #- name: Run lint
      #  run: yarn run lint
      - name: Run build
        run: yarn build
      - name: Publish package
        if: ${{inputs.publish}}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Conditionally set the version with or without a suffix
          VERSION="${{ needs.generate-version.outputs.service-version }}"
          if [ -n "${{ inputs.package_suffix }}" ]; then
            VERSION="$VERSION.${{ inputs.package_suffix }}"
          fi

          yarn version --new-version "$VERSION"
          yarn publish --no-git-tag-version

  publish-version:
    runs-on:
      group: gke-non-prod
    needs: [generate-version, build]
    permissions:
      checks: write
    steps:
      - name: Check ref and release input
        run: |
          echo "github.ref: ${{ github.ref }}, release: ${{ inputs.release }}"
      - name: Publish Version
        uses: chirpwireless/reusable-github-actions/.github/actions/version-publish@main
        with:
          commit-sha: ${{ github.event.pull_request.head.sha || github.sha }}
          build-version: ${{ needs.generate-version.outputs.service-version }}

  publish-release:
    if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && inputs.release == 'true'
    runs-on:
      group: gke-non-prod
    needs: [generate-version, build]
    steps:
      - uses: chirpwireless/reusable-github-actions/.github/actions/publish-release@main
        with:
          version: ${{ needs.generate-version.outputs.service-version }}
