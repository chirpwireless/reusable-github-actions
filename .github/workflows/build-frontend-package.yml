name: Build a frontend package
on:
  workflow_call:
    inputs:
      publish:
        type: boolean
        default: false
        description: "True if you want to publish the build output to Github Registry"
      release:
        type: boolean
        default: false
        description: "True if you want to create a release"
      config:
        type: string
        required: true
        description: 'Array of env_local and suffix pairs in JSON format (e.g., ''[{"env_local": "STAGING_ENV_LOCAL", "suffix": "staging"}, {"env_local": "PROD_ENV_LOCAL", "suffix": "prod"}]'')'

env:
  HOME: ${{github.workspace}}
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

jobs:
  generate-version:
    runs-on:
      group: scw-k8s-dev
    outputs:
      service-version: ${{ steps.version.outputs.new_version }}
    steps:
      - uses: actions/checkout@v4
      - id: version
        uses: chirpwireless/reusable-github-actions/.github/actions/calendar-version@main
      - name: "Create a summary"
        run: |
          echo "Building a new revision ${{steps.version.outputs.new_version}}" > $GITHUB_STEP_SUMMARY

  build:
    runs-on:
      group: builder
    needs: [generate-version]
    strategy:
      matrix:
        combo: ${{ fromJson(inputs.config) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
      - name: Prepare .env.local file
        run: |
          echo "${{ vars[matrix.combo.env_local] }}" > .env.local
      - name: Install Yarn
        run: |
          npm install -g yarn@1.22.22
      - name: Install yarn dependencies
        run: yarn install --frozen-lockfile
      - name: Run build
        run: yarn build
      - name: Publish package
        if: ${{ inputs.publish }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Conditionally set the version with or without a suffix
          VERSION="${{ needs.generate-version.outputs.service-version }}"
          if [ -n "${{ matrix.combo.suffix }}" ]; then
            VERSION="$VERSION.${{ matrix.combo.suffix }}"
          fi

          yarn version --new-version "$VERSION"
          yarn publish --no-git-tag-version

  publish-version:
    if: inputs.publish
    runs-on:
      group: scw-k8s-dev
    needs: [generate-version, build]
    permissions:
      checks: write
    steps:
      - name: Publish Version
        uses: chirpwireless/reusable-github-actions/.github/actions/version-publish@main
        with:
          commit-sha: ${{ github.event.pull_request.head.sha || github.sha }}
          build-version: ${{ needs.generate-version.outputs.service-version }}

  publish-release:
    if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && inputs.release
    runs-on:
      group: scw-k8s-dev
    needs: [generate-version, build]
    steps:
      - uses: chirpwireless/reusable-github-actions/.github/actions/publish-release@main
        with:
          version: ${{ needs.generate-version.outputs.service-version }}
