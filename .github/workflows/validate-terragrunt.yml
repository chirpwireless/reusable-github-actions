name: Validate a Terraform with Terragrunt
on:
  workflow_call:
    inputs:
      tf_version:
        description: "Terraform version to use"
        type: string
        default: "1.10.3"
      tg_version:
        description: "Terragrunt version to use"
        type: string
        default: "0.71.1"
      tg_working_dir:
        description: "Directory in which Terragrunt will be invoked"
        type: string
        required: true
    outputs:
      new-version:
        description: "The new service version"
        value: ${{ jobs.generate-version.outputs.service-version }}

env:
  HOME: ${{github.workspace}}

jobs:
  generate-version:
    runs-on:
      group: gke-non-prod
    outputs:
      service-version: ${{ steps.version.outputs.new_version }}
    steps:
      - uses: actions/checkout@v4
      - id: version
        uses: chirpwireless/reusable-github-actions/.github/actions/calendar-version@main
      - name: "Create a summary"
        run: |
          echo "Building a new revision ${{steps.version.outputs.new_version}}" > $GITHUB_STEP_SUMMARY

  terragrunt-validate:
    runs-on:
      group: gke-non-prod
    needs: [generate-version]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.GOLANG_BUILDER_APP_ID }}
          private-key: ${{ secrets.GOLANG_BUILDER_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Check terragrunt HCL
        uses: gruntwork-io/terragrunt-action@v2
        env:
          # Disable s3 backend for validation
          TERRAGRUNT_ENABLE_BACKEND: "false"
          # Configure Git to use installation token
          INPUT_PRE_EXEC_1: |
            git config --global url."https://x-access-token:${{ steps.app-token.outputs.token }}@github.com/".insteadOf "https://github.com/"
        with:
          tf_version: ${{ inputs.tf_version }}
          tg_version: ${{ inputs.tg_version }}
          tg_dir: ${{ inputs.tg_working_dir }}
          tg_command: "run-all validate"

  publish-version:
    runs-on:
      group: gke-non-prod
    needs: [generate-version, terragrunt-validate]
    permissions:
      checks: write
    steps:
      - name: Publish Version
        uses: chirpwireless/reusable-github-actions/.github/actions/version-publish@main
        with:
          commit-sha: ${{ github.event.pull_request.head.sha || github.sha }}
          build-version: ${{ needs.generate-version.outputs.service-version }}

  publish-release:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on:
      group: gke-non-prod
    needs: [generate-version, terragrunt-validate]
    steps:
      - uses: chirpwireless/reusable-github-actions/.github/actions/publish-release@main
        with:
          version: ${{ needs.generate-version.outputs.service-version }}
