name: "Download a github package"
description: "Download a github package"

inputs:
  package_name:
    description: "Name of the package"
    required: true
  package_ext:
    description: "Package extension (e.g., tgz, tar.gz)"
    required: true
    default: "tgz"
  package_suffix:
    description: "Suffix to append to the package version (optional)"
    required: false
    default: ""
  version:
    description: "Package version"
    required: true

runs:
  using: composite
  steps:
    - id: download-package
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');

          // Retrieve inputs from the workflow
          const packageName = "${{ inputs.package_name }}";
          const packageExtension = "${{ inputs.package_ext }}";
          const packageSuffix = "${{ inputs.package_suffix }}";
          const packageVersion = "${{ inputs.version }}";
          const owner = context.repo.owner;
          const token = process.env.GITHUB_TOKEN;

          // Append the suffix to the version if it's provided
          const finalVersion = packageSuffix ? `${packageVersion}.${packageSuffix}` : packageVersion;
          const fileName = `${packageName}-${finalVersion}.${packageExtension}`;

          // Construct the URL for downloading the package
          const url = `https://npm.pkg.github.com/@${owner}/${packageName}/-/${fileName}`;

          console.log(`Downloading package from: ${url}`);

          // Fetch the package .tgz file
          const response = await fetch(url, {
            headers: {
              'Authorization': `token ${token}`
            }
          });

          if (!response.ok) {
            throw new Error(`Failed to download package: ${response.statusText}`);
          }

          // Save the downloaded file
          const fileStream = fs.createWriteStream(fileName);
          await new Promise((resolve, reject) => {
            response.body.pipe(fileStream);
            response.body.on('error', reject);
            fileStream.on('finish', resolve);
          });

          console.log(`Package downloaded and saved as ${fileName}`);
